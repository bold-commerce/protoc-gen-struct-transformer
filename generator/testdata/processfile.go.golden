// Code generated by protoc-gen-struct-transformer, version: v0.0.1. DO NOT EDIT.
// source file: product.proto
// source package: pb

package product
func PbToProductPtr(src *pb1.Product, opts ...TransformParam) *repo1.Product {
	if src == nil {
		return nil
	}

	d := PbToProduct(*src, opts...)
	return &d
}

func PbToProductPtrList(src []*pb1.Product, opts ...TransformParam) []*repo1.Product {
	resp := make([]*repo1.Product, len(src))

	for i, s := range src {
		resp[i] = PbToProductPtr(s, opts...)
	}

	return resp
}

func PbToProductPtrVal(src *pb1.Product, opts ...TransformParam) repo1.Product {
	if src == nil {
		return repo1.Product{}
	}

	return PbToProduct(*src, opts...)
}

func PbToProductPtrValList(src []*pb1.Product, opts ...TransformParam) []repo1.Product {
	resp := make([]repo1.Product, len(src))

	for i, s := range src {
		resp[i] = PbToProduct(*s)
		}

	return resp
}

// PbToProductList is DEPRECATED. Use PbToProductPtrValList instead.
func PbToProductList(src []*pb1.Product, opts ...TransformParam) []repo1.Product {
	return PbToProductPtrValList(src)
}

func PbToProduct(src pb1.Product, opts ...TransformParam) repo1.Product {
	s := repo1.Product{
			ID:  int(src.Id ),
	}

	applyOptions(opts...)


	return s
}

func PbToProductValPtr(src pb1.Product, opts ...TransformParam) *repo1.Product {
	d := PbToProduct(src, opts...)
	return &d
}

func PbToProductValList(src []pb1.Product, opts ...TransformParam) []repo1.Product {
	resp := make([]repo1.Product, len(src))

	for i, s := range src {
		resp[i] = PbToProduct(s, opts...)
	}

	return resp
}

func ProductToPbPtr(src *repo1.Product, opts ...TransformParam) *pb1.Product {
	if src == nil {
		return nil
	}

	d := ProductToPb(*src, opts...)
	return &d
}

func ProductToPbPtrList(src []*repo1.Product, opts ...TransformParam) []*pb1.Product {
	resp := make([]*pb1.Product, len(src))

	for i, s := range src {
		resp[i] = ProductToPbPtr(s, opts...)
	}

	return resp
}

func ProductToPbPtrVal(src *repo1.Product, opts ...TransformParam) pb1.Product {
	if src == nil {
		return pb1.Product{}
	}

	return ProductToPb(*src, opts...)
}

func ProductToPbValPtrList(src []repo1.Product, opts ...TransformParam) []*pb1.Product {
	resp := make([]*pb1.Product, len(src))

	for i, s := range src {
		g := ProductToPb(s, opts...)
		resp[i] = &g
		}

	return resp
}

// ProductToPbList is DEPRECATED. Use ProductToPbValPtrList instead.
func ProductToPbList(src []repo1.Product, opts ...TransformParam) []*pb1.Product {
	return ProductToPbValPtrList(src)
}

func ProductToPb(src repo1.Product, opts ...TransformParam) pb1.Product {
	s := pb1.Product{
			Id:  int64(src.ID ),
	}

	applyOptions(opts...)


	return s
}

func ProductToPbValPtr(src repo1.Product, opts ...TransformParam) *pb1.Product {
	d := ProductToPb(src, opts...)
	return &d
}

func ProductToPbValList(src []repo1.Product, opts ...TransformParam) []pb1.Product {
	resp := make([]pb1.Product, len(src))

	for i, s := range src {
		resp[i] = ProductToPb(s, opts...)
	}

	return resp
}

